datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Empresa {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  nomeFantasia String   @default("")
  email        String   @unique
  senha        String
  criadoEm     DateTime @default(now())

  funcionarios Funcionario[]

  @@map("empresas")
}

model Funcionario {
  id                   String    @id @default(auto()) @map("_id") @db.ObjectId
  nomeFuncionario      String    @default("")
  sobrenomeFuncionario String?   @default("")
  posicaoFuncionario   String?   @default("")
  turnoFuncionario     String?   @default("")
  horaInicio           DateTime? @default(now())
  horaFinal            DateTime? @default(now())

  empresa   Empresa @relation(fields: [empresaId], references: [id])
  empresaId String  @db.ObjectId

  diasTrabalhados   DiaTrabalhado[]
  eventoFuncionario EventoFuncionario[]

  @@map("funcionarios")
}

model DiaTrabalhado {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  dia        DateTime @default(now())
  horasNoDia Int      @default(0)

  funcionario   Funcionario @relation(fields: [funcionarioId], references: [id])
  funcionarioId String      @db.ObjectId

  @@map("diasTrabalhados")
}

model EventoFuncionario {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  key         String    @default("")
  dataInicio  DateTime  @default(now())
  dataFinal   DateTime? @default(now())
  selecionado Boolean   @default(false)
  comecoDia   Boolean   @default(false)
  finalDia    Boolean   @default(false)

  funcionario   Funcionario @relation(fields: [funcionarioId], references: [id])
  funcionarioId String      @db.ObjectId

  @@map("eventosFuncionario")
}
